
DEBUG = 0

ifeq ($(platform),)
platform = unix
ifeq ($(shell uname -a),)
   platform = win
else ifneq ($(findstring Darwin,$(shell uname -a)),)
   platform = osx
else ifneq ($(findstring MINGW,$(shell uname -a)),)
   platform = win
endif
endif

TARGET_NAME := BasiliskII

ifeq ($(platform), unix)
   CC = gcc
   CXX = g++
   CFLAGS = -g -O2 
   CXXFLAGS = -g -O2  -fno-merge-constants -fno-gcse-sm
   TARGET := $(TARGET_NAME)_libretro.so
   fpic := -fPIC
   SHARED := -shared -Wl,--no-undefined -Wl,--version-script=link.T
   ENDIANNESS_DEFINES := -DLSB_FIRST
   FLAGS +=
else ifeq ($(platform), osx)
   TARGET := libretro.dylib
   fpic := -fPIC
   SHARED := -dynamiclib
   ENDIANNESS_DEFINES := -DLSB_FIRST
   FLAGS +=
else
   TARGET :=  $(TARGET_NAME)_retro.dll
   CC = gcc
   CXX = g++
   SHARED := -shared -Wl,--no-undefined -Wl,--version-script=link.T
   LDFLAGS += -static-libgcc -static-libstdc++ -lwinmm
   ENDIANNESS_DEFINES := -DLSB_FIRST
   FLAGS +=
endif


BASILISK_DIR := ..
SOURCE_DIR := $(BASILISK_DIR)/src

DEFS = -DHAVE_CONFIG_H  -DOS_linux -DDIRECT_ADDRESSING -DUNALIGNED_PROFITABLE -DX86_64_ASSEMBLY -DOPTIMIZED_FLAGS -DFPU_IEEE -D_REENTRANT -DDATADIR=\"$(datadir)/$(APP)\" -DUSE_CPU_EMUL_SERVICES 

SYSSRCS = video_retro.cpp ../Unix/extfs_unix.cpp ../Unix/serial_unix.cpp ../Unix/ether_unix.cpp ../Unix/Linux/scsi_linux.cpp audio_retro.cpp  ../dummy/prefs_editor_dummy.cpp   ./main_unix.cpp ../Unix/prefs_unix.cpp ../dummy/clip_dummy.cpp #../Unix/clip_unix.cpp

CPUSRCS = ../uae_cpu/basilisk_glue.cpp ../uae_cpu/memory.cpp ../uae_cpu/newcpu.cpp ../uae_cpu/readcpu.cpp ../uae_cpu/fpu/fpu_ieee.cpp ./cpustbl.cpp ./cpudefs.cpp cpuemu1.cpp cpuemu2.cpp cpuemu3.cpp cpuemu4.cpp cpuemu5.cpp cpuemu6.cpp cpuemu7.cpp cpuemu8.cpp 


XPLAT_SRCS = ../CrossPlatform/vm_alloc.cpp ../CrossPlatform/sigsegv.cpp ../CrossPlatform/video_blit.cpp

SLIRP_SRCS =     ../slirp/bootp.c     ../slirp/ip_output.c  ../slirp/tcp_input.c      ../slirp/cksum.c     ../slirp/mbuf.c       ../slirp/tcp_output.c     ../slirp/debug.c     ../slirp/misc.c       ../slirp/tcp_subr.c       ../slirp/if.c        ../slirp/sbuf.c       ../slirp/tcp_timer.c      ../slirp/ip_icmp.c   ../slirp/slirp.c      ../slirp/tftp.c           ../slirp/ip_input.c  ../slirp/socket.c     ../slirp/udp.c

UNIX_SRCS = ../Unix/sshpty.c ../Unix/strlcpy.c

SRCS = ../main.cpp ../prefs.cpp ../prefs_items.cpp \
    ../Unix/sys_unix.cpp ../rom_patches.cpp ../slot_rom.cpp ../rsrc_patches.cpp \
    ../emul_op.cpp ../macos_util.cpp ../xpram.cpp  ../Unix/xpram_unix.cpp ../timer.cpp \
     ../Unix/timer_unix.cpp ../adb.cpp ../serial.cpp ../ether.cpp \
    ../sony.cpp ../disk.cpp ../cdrom.cpp ../scsi.cpp ../video.cpp \
	../CrossPlatform/vm_alloc.cpp ../CrossPlatform/sigsegv.cpp ../CrossPlatform/video_blit.cpp \
     ../audio.cpp ../extfs.cpp  ../Unix/disk_sparsebundle.cpp \
	../Unix/tinyxml2.cpp \
    ../user_strings.cpp ../Unix/user_strings_unix.cpp ../Unix/rpc_unix.cpp \
    $(SYSSRCS) $(CPUSRCS) $(XPLAT_SRCS)  

SOURCES_CPP := $(SRCS)

LIBRETRO_SOURCES := libretro.cpp

SOURCES := $(LIBRETRO_SOURCES)
OBJECTS :=  $(SOURCES_CPP:.cpp=.o) $(SOURCES:.cpp=.o) $(SLIRP_SRCS:.c=.o) $(UNIX_SRCS:.c=.o) # $(M68K_SOURCES:.c=.o)   

all: $(TARGET)

ifeq ($(DEBUG), 0)
   FLAGS += -O3 -ffast-math -fomit-frame-pointer
else
   FLAGS += -O0 -g
endif

LDFLAGS += $(fpic) -lz -lpthread $(SHARED) -lrt
FLAGS += $(fpic) 
FLAGS += -I. -I../src  -I./../include -I./. -I../uae_cpu -I../Unix -I../slirp -I./../CrossPlatform

WARNINGS :=  
	
FLAGS += -D__LIBRETRO__ $(ENDIANNESS_DEFINES) $(WARNINGS) -DRETRO $(DEFS)

CXXFLAGS += $(FLAGS) -fpermissive
CFLAGS += $(FLAGS) -std=gnu99

cpuemu1.o: ./cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_1 $(CXXFLAGS) -c $< -o $@
cpuemu2.o: ./cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_2 $(CXXFLAGS) -c $< -o $@
cpuemu3.o: ./cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_3 $(CXXFLAGS) -c $< -o $@
cpuemu4.o: ./cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_4 $(CXXFLAGS) -c $< -o $@
cpuemu5.o: ./cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_5 $(CXXFLAGS) -c $< -o $@
cpuemu6.o: ./cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_6 $(CXXFLAGS) -c $< -o $@
cpuemu7.o: ./cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_7 $(CXXFLAGS) -c $< -o $@
cpuemu8.o: ./cpuemu.cpp
	$(CXX) $(CPPFLAGS) $(DEFS) -DPART_8 $(CXXFLAGS) -c $< -o $@

$(TARGET): $(OBJECTS)
	$(CXX) -o $@ $^ $(LDFLAGS)

%.o: %.cpp
	$(CXX) -c -o $@ $< $(CXXFLAGS)

%.o: %.c
	$(CC) -c -o $@ $< $(CFLAGS)

clean:
	rm -f $(TARGET) $(OBJECTS)

.PHONY: clean
